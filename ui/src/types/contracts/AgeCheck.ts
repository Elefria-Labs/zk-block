/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';
import { FunctionFragment, Result, EventFragment } from '@ethersproject/abi';
import { Listener, Provider } from '@ethersproject/providers';
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from './common';

export interface AgeCheckInterface extends utils.Interface {
  contractName: 'AgeCheck';
  functions: {
    'getVerficationStatus(address)': FunctionFragment;
    'setVerficationStatus(bool)': FunctionFragment;
    'verifyAge(uint256[8],uint256[2])': FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: 'getVerficationStatus',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'setVerficationStatus',
    values: [boolean],
  ): string;
  encodeFunctionData(
    functionFragment: 'verifyAge',
    values: [BigNumberish[], [BigNumberish, BigNumberish]],
  ): string;

  decodeFunctionResult(
    functionFragment: 'getVerficationStatus',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setVerficationStatus',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'verifyAge', data: BytesLike): Result;

  events: {
    'AgeVerfied(address,bool)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'AgeVerfied'): EventFragment;
}

export type AgeVerfiedEvent = TypedEvent<
  [string, boolean],
  { person: string; verfied: boolean }
>;

export type AgeVerfiedEventFilter = TypedEventFilter<AgeVerfiedEvent>;

export interface AgeCheck extends BaseContract {
  contractName: 'AgeCheck';
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: AgeCheckInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getVerficationStatus(
      _user: string,
      overrides?: CallOverrides,
    ): Promise<[boolean]>;

    setVerficationStatus(
      _status: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    verifyAge(
      _proof: BigNumberish[],
      _input: [BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;
  };

  getVerficationStatus(
    _user: string,
    overrides?: CallOverrides,
  ): Promise<boolean>;

  setVerficationStatus(
    _status: boolean,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  verifyAge(
    _proof: BigNumberish[],
    _input: [BigNumberish, BigNumberish],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  callStatic: {
    getVerficationStatus(
      _user: string,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    setVerficationStatus(
      _status: boolean,
      overrides?: CallOverrides,
    ): Promise<void>;

    verifyAge(
      _proof: BigNumberish[],
      _input: [BigNumberish, BigNumberish],
      overrides?: CallOverrides,
    ): Promise<void>;
  };

  filters: {
    'AgeVerfied(address,bool)'(
      person?: null,
      verfied?: null,
    ): AgeVerfiedEventFilter;
    AgeVerfied(person?: null, verfied?: null): AgeVerfiedEventFilter;
  };

  estimateGas: {
    getVerficationStatus(
      _user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    setVerficationStatus(
      _status: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    verifyAge(
      _proof: BigNumberish[],
      _input: [BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getVerficationStatus(
      _user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    setVerficationStatus(
      _status: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    verifyAge(
      _proof: BigNumberish[],
      _input: [BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;
  };
}
